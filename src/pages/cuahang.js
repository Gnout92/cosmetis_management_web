import { useState, useEffect } from 'react';
import Image from 'next/image';
import styles from '../styles/cuahang.module.css';


const CuaHang = () => {
  const [selectedBranch, setSelectedBranch] = useState(null);
  const [showContactForm, setShowContactForm] = useState(false);
  const [formData, setFormData] = useState({
    name: '',
    phone: '',
    email: '',
    message: ''
  });

  // D·ªØ li·ªáu chi nh√°nh c·ª≠a h√†ng
  const branches = [
    {
      id: 1,
      name: "KaKa M·ªπ Ph·∫©m ‚Äì C·∫ßn Th∆°",
      address: "123 Nguy·ªÖn Tr√£i, Qu·∫≠n Ninh Ki·ªÅu, TP. C·∫ßn Th∆°",
      phone: "0901 234 567",
      email: "cantho@kakacosmetica.com",
      hours: "8:00 ‚Äì 21:00 (T2‚ÄìCN)",
      region: "Mi·ªÅn Nam",
      mapUrl: "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3928.8414722047205!2d105.78011!3d10.029998!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31a0895a51d60719%3A0x9d76b0035f6d53d0!2zTmd1eeG7hW4gVHLDo2ksIE5pbmggS2nhu4F1LCBD4bqnbiBUaMah!5e0!3m2!1svi!2s!4v1709000000000!5m2!1svi!2s",
      image: "/images/store-cantho.jpg"
    },
    {
      id: 2,
      name: "KaKa M·ªπ Ph·∫©m ‚Äì TP.HCM Qu·∫≠n 1",
      address: "456 ƒê∆∞·ªùng L√™ L·ª£i, Qu·∫≠n 1, TP. H·ªì Ch√≠ Minh",
      phone: "0902 345 678",
      email: "q1hcm@kakacosmetica.com",
      hours: "8:30 ‚Äì 21:30 (T2‚ÄìCN)",
      region: "Mi·ªÅn Nam",
      mapUrl: "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3919.4175153486596!2d106.69779!3d10.772675!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x31752f1c06f4e1dd%3A0x43900f1d4539a3d!2zTMOqIEzhu6NpLCBRdeG6rW4gMSwgVGjDoG5oIHBo4buRIEjhu5MgQ2jDrSBNaW5o!5e0!3m2!1svi!2s!4v1709000000000!5m2!1svi!2s",
      image: "/images/store-hcm-q1.jpg"
    },
    {
      id: 3,
      name: "KaKa M·ªπ Ph·∫©m ‚Äì TP.HCM Qu·∫≠n 7",
      address: "789 Nguy·ªÖn Th·ªã Th·∫≠p, Qu·∫≠n 7, TP. H·ªì Ch√≠ Minh",
      phone: "0903 456 789",
      email: "q7hcm@kakacosmetica.com",
      hours: "9:00 ‚Äì 21:00 (T2‚ÄìCN)",
      region: "Mi·ªÅn Nam",
      mapUrl: "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3920.0256345678!2d106.71234!3d10.75432!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x317528b0a29b8b45%3A0x123456789abcdef!2zTmd1eeG7hW4gVGjhu4sgVGjhuq1wLCBRdeG6rW4gNw!5e0!3m2!1svi!2s!4v1709000000000!5m2!1svi!2s",
      image: "/images/store-hcm-q7.jpg"
    },
    {
      id: 4,
      name: "KaKa M·ªπ Ph·∫©m ‚Äì ƒê√† N·∫µng",
      address: "321 L√™ Du·∫©n, Qu·∫≠n H·∫£i Ch√¢u, TP. ƒê√† N·∫µng",
      phone: "0904 567 890",
      email: "danang@kakacosmetica.com",
      hours: "8:00 ‚Äì 21:00 (T2‚ÄìCN)",
      region: "Mi·ªÅn Trung",
      mapUrl: "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3834.0123456789!2d108.2123!3d16.0678!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x314219c792252a63%3A0x1d0123456789abc!2zTMOqIER1w6JuLCBIYWkgQ2jDonUsIMSQw6AgTuG6tW5n!5e0!3m2!1svi!2s!4v1709000000000!5m2!1svi!2s",
      image: "/images/store-danang.jpg"
    },
    {
      id: 5,
      name: "KaKa M·ªπ Ph·∫©m ‚Äì H√† N·ªôi Ba ƒê√¨nh",
      address: "654 ƒê∆∞·ªùng L√°ng, Qu·∫≠n Ba ƒê√¨nh, TP. H√† N·ªôi",
      phone: "0905 678 901",
      email: "badinh@kakacosmetica.com",
      hours: "8:30 ‚Äì 21:00 (T2‚ÄìCN)",
      region: "Mi·ªÅn B·∫Øc",
      mapUrl: "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3724.1234567890!2d105.8019!3d21.0285!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x3135ab9bd9861ca1%3A0x1234567890abcdef!2zxJDGsOG7nW5nIEzDoW5nLCBCYSDEkMOsbmgsIEjDoCBO4buZaQ!5e0!3m2!1svi!2s!4v1709000000000!5m2!1svi!2s",
      image: "/images/store-hanoi-badinh.jpg"
    },
    {
      id: 6,
      name: "KaKa M·ªπ Ph·∫©m ‚Äì H√† N·ªôi C·∫ßu Gi·∫•y",
      address: "987 Xu√¢n Th·ªßy, Qu·∫≠n C·∫ßu Gi·∫•y, TP. H√† N·ªôi",
      phone: "0906 789 012",
      email: "caugiay@kakacosmetica.com",
      hours: "9:00 ‚Äì 21:30 (T2‚ÄìCN)",
      region: "Mi·ªÅn B·∫Øc",
      mapUrl: "https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d3723.9876543210!2d105.7894!3d21.0456!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x313454b91f916a05%3A0x9876543210fedcba!2zWHXDom4gVGjhu6d5LCBD4bqndSBHaeG6pXksIEjDoCBO4buZaQ!5e0!3m2!1svi!2s!4v1709000000000!5m2!1svi!2s",
      image: "/images/store-hanoi-caugiay.jpg"
    }
  ];

  // D·ªØ li·ªáu h√¨nh ·∫£nh c·ª≠a h√†ng
  const storeImages = [
    {
      id: 1,
      title: "K·ªá tr∆∞ng b√†y m·ªπ ph·∫©m cao c·∫•p",
      image: "/images/banners/banner1.jpg",
      description: "Kh√¥ng gian tr∆∞ng b√†y hi·ªán ƒë·∫°i v·ªõi ƒë·∫ßy ƒë·ªß c√°c s·∫£n ph·∫©m m·ªπ ph·∫©m ch·∫•t l∆∞·ª£ng cao"
    },
    {
      id: 2,
      title: "Khu t∆∞ v·∫•n l√†m ƒë·∫πp chuy√™n nghi·ªáp",
      image: "/images/banners/banner2.jpg",
      description: "Khu v·ª±c t∆∞ v·∫•n ri√™ng t∆∞ v·ªõi ƒë·ªôi ng≈© chuy√™n vi√™n gi√†u kinh nghi·ªám"
    },
    {
      id: 3,
      title: "Nh√¢n vi√™n chƒÉm s√≥c kh√°ch h√†ng",
      image: "/images/banners/banner3.jpg",
      description: "ƒê·ªôi ng≈© nh√¢n vi√™n t·∫≠n t√¢m, chuy√™n nghi·ªáp ph·ª•c v·ª• kh√°ch h√†ng 24/7"
    },
    {
      id: 4,
      title: "Kh√¥ng gian mua s·∫Øm tho·∫£i m√°i",
      image: "/images/banners/banner1.jpg",
      description: "Thi·∫øt k·∫ø n·ªôi th·∫•t sang tr·ªçng, t·∫°o c·∫£m gi√°c th∆∞ gi√£n khi mua s·∫Øm"
    }
  ];

  // Nh√≥m chi nh√°nh theo khu v·ª±c
  const branchesByRegion = branches.reduce((acc, branch) => {
    if (!acc[branch.region]) {
      acc[branch.region] = [];
    }
    acc[branch.region].push(branch);
    return acc;
  }, {});

  // X·ª≠ l√Ω form li√™n h·ªá
  const handleInputChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmitContact = (e) => {
    e.preventDefault();
    // X·ª≠ l√Ω g·ª≠i form ·ªü ƒë√¢y
    console.log('Form data:', formData);
    alert('C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n s·ªõm nh·∫•t.');
    setShowContactForm(false);
    setFormData({ name: '', phone: '', email: '', message: '' });
  };

  const handleCallBranch = (phone) => {
    window.open(`tel:${phone}`, '_self');
  };

  const handleGetDirections = (address) => {
    const encodedAddress = encodeURIComponent(address);
    window.open(`https://www.google.com/maps/search/?api=1&query=${encodedAddress}`, '_blank');
  };

  const handleViewMap = (branch) => {
    setSelectedBranch(branch);
  };

  return (
    <div className={styles.container}>
      {/* Header Section */}
      <div className={styles.headerSection}>
        <div className={styles.heroContent}>
          <h1 className={styles.mainTitle}>
            üè™ H·ªá Th·ªëng C·ª≠a H√†ng KaKa M·ªπ Ph·∫©m
          </h1>
          <p className={styles.heroDescription}>
            H·ªá th·ªëng c·ª≠a h√†ng m·ªπ ph·∫©m KaKa hi·ªán c√≥ m·∫∑t t·∫°i nhi·ªÅu t·ªânh th√†nh tr√™n to√†n qu·ªëc, 
            mang ƒë·∫øn cho b·∫°n tr·∫£i nghi·ªám mua s·∫Øm ti·ªán l·ª£i v√† chuy√™n nghi·ªáp nh·∫•t.
          </p>
          <div className={styles.heroStats}>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>6+</span>
              <span className={styles.statLabel}>Chi nh√°nh</span>
            </div>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>3</span>
              <span className={styles.statLabel}>Mi·ªÅn</span>
            </div>
            <div className={styles.statItem}>
              <span className={styles.statNumber}>1000+</span>
              <span className={styles.statLabel}>S·∫£n ph·∫©m</span>
            </div>
          </div>
        </div>
        <div className={styles.heroImage}>
          <Image 
            src="/images/banners/banner3.jpg"
            alt="KaKa Store Hero" 
            width={600} 
            height={400}
            className={styles.heroImg}
          />
        </div>
      </div>

      {/* Quick Actions */}
      <div className={styles.quickActions}>
        <button 
          className={styles.actionBtn}
          onClick={() => handleCallBranch('1900-234-567')}
        >
          <span className={styles.actionIcon}>üìû</span>
          G·ªçi ngay
        </button>
        <button 
          className={styles.actionBtn}
          onClick={() => window.open('https://www.facebook.com/kakacosmetica', '_blank')}
        >
          <span className={styles.actionIcon}>üì±</span>
          Fanpage
        </button>
        <button 
          className={styles.actionBtn}
          onClick={() => window.open('https://zalo.me/kakacosmetica', '_blank')}
        >
          <span className={styles.actionIcon}>üí¨</span>
          Zalo
        </button>
        <button 
          className={styles.actionBtn}
          onClick={() => setShowContactForm(true)}
        >
          <span className={styles.actionIcon}>‚úâÔ∏è</span>
          Li√™n h·ªá
        </button>
      </div>

      {/* Branches Section */}
      <div className={styles.branchesSection}>
        <h2 className={styles.sectionTitle}>
          üó∫Ô∏è Danh S√°ch Chi Nh√°nh
        </h2>
        
        {Object.entries(branchesByRegion).map(([region, regionBranches]) => (
          <div key={region} className={styles.regionContainer}>
            <h3 className={styles.regionTitle}>{region}</h3>
            <div className={styles.branchGrid}>
              {regionBranches.map(branch => (
                <div key={branch.id} className={styles.branchCard}>
                  <div className={styles.branchHeader}>
                    <h4 className={styles.branchName}>{branch.name}</h4>
                    <div className={styles.branchBadge}>{branch.region}</div>
                  </div>
                  
                  <div className={styles.branchInfo}>
                    <div className={styles.infoItem}>
                      <span className={styles.infoIcon}>üìç</span>
                      <span className={styles.infoText}>{branch.address}</span>
                    </div>
                    
                    <div className={styles.infoItem}>
                      <span className={styles.infoIcon}>‚òéÔ∏è</span>
                      <span className={styles.infoText}>{branch.phone}</span>
                    </div>
                    
                    <div className={styles.infoItem}>
                      <span className={styles.infoIcon}>üïí</span>
                      <span className={styles.infoText}>{branch.hours}</span>
                    </div>
                    
                    <div className={styles.infoItem}>
                      <span className={styles.infoIcon}>üìß</span>
                      <span className={styles.infoText}>{branch.email}</span>
                    </div>
                  </div>
                  
                  <div className={styles.branchActions}>
                    <button 
                      className={styles.mapBtn}
                      onClick={() => handleViewMap(branch)}
                    >
                      üó∫Ô∏è Xem b·∫£n ƒë·ªì
                    </button>
                    <button 
                      className={styles.contactBtn}
                      onClick={() => handleCallBranch(branch.phone)}
                    >
                      üí¨ Li√™n h·ªá ngay
                    </button>
                    <button 
                      className={styles.directionBtn}
                      onClick={() => handleGetDirections(branch.address)}
                    >
                      üìç Ch·ªâ ƒë∆∞·ªùng
                    </button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
      </div>

      {/* Interactive Map Section */}
      <div className={styles.mapSection}>
        <h2 className={styles.sectionTitle}>
          üó∫Ô∏è B·∫£n ƒê·ªì T∆∞∆°ng T√°c
        </h2>
        
        {selectedBranch ? (
          <div className={styles.mapContainer}>
            <div className={styles.mapHeader}>
              <h3>{selectedBranch.name}</h3>
              <button 
                className={styles.closeMapBtn}
                onClick={() => setSelectedBranch(null)}
              >
                ‚úï
              </button>
            </div>
            <iframe
              src={selectedBranch.mapUrl}
              width="100%"
              height="400"
              style={{ border: 0, borderRadius: '12px' }}
              allowFullScreen
              loading="lazy"
              referrerPolicy="no-referrer-when-downgrade"
            />
          </div>
        ) : (
          <div className={styles.mapPlaceholder}>
            <div className={styles.placeholderContent}>
              <span className={styles.placeholderIcon}>üó∫Ô∏è</span>
              <h3>Ch·ªçn chi nh√°nh ƒë·ªÉ xem b·∫£n ƒë·ªì</h3>
              <p>Nh·∫•n v√†o n√∫t "Xem b·∫£n ƒë·ªì" ·ªü b·∫•t k·ª≥ chi nh√°nh n√†o ƒë·ªÉ hi·ªÉn th·ªã v·ªã tr√≠ ch√≠nh x√°c</p>
            </div>
          </div>
        )}
      </div>

      {/* Store Images Gallery */}
      <div className={styles.gallerySection}>
        <h2 className={styles.sectionTitle}>
          üñºÔ∏è H√¨nh ·∫¢nh C·ª≠a H√†ng
        </h2>
        <div className={styles.imageGrid}>
          {storeImages.map(item => (
            <div key={item.id} className={styles.imageCard}>
              <div className={styles.imageWrapper}>
                <Image 
                  src={item.image} 
                  alt={item.title}
                  width={300}
                  height={200}
                  className={styles.storeImage}
                />
              </div>
              <div className={styles.imageContent}>
                <h4 className={styles.imageTitle}>{item.title}</h4>
                <p className={styles.imageDescription}>{item.description}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Contact Form Modal */}
      {showContactForm && (
        <div className={styles.modalOverlay}>
          <div className={styles.modalContent}>
            <div className={styles.modalHeader}>
              <h3>üìß ƒêƒÉng K√Ω Nh·∫≠n Th√¥ng Tin</h3>
              <button 
                className={styles.closeModalBtn}
                onClick={() => setShowContactForm(false)}
              >
                ‚úï
              </button>
            </div>
            
            <form onSubmit={handleSubmitContact} className={styles.contactForm}>
              <div className={styles.formGroup}>
                <label className={styles.formLabel}>H·ªç v√† t√™n *</label>
                <input
                  type="text"
                  name="name"
                  value={formData.name}
                  onChange={handleInputChange}
                  className={styles.formInput}
                  placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                  required
                />
              </div>
              
              <div className={styles.formGroup}>
                <label className={styles.formLabel}>S·ªë ƒëi·ªán tho·∫°i *</label>
                <input
                  type="tel"
                  name="phone"
                  value={formData.phone}
                  onChange={handleInputChange}
                  className={styles.formInput}
                  placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                  required
                />
              </div>
              
              <div className={styles.formGroup}>
                <label className={styles.formLabel}>Email</label>
                <input
                  type="email"
                  name="email"
                  value={formData.email}
                  onChange={handleInputChange}
                  className={styles.formInput}
                  placeholder="Nh·∫≠p ƒë·ªãa ch·ªâ email"
                />
              </div>
              
              <div className={styles.formGroup}>
                <label className={styles.formLabel}>Tin nh·∫Øn</label>
                <textarea
                  name="message"
                  value={formData.message}
                  onChange={handleInputChange}
                  className={styles.formTextarea}
                  placeholder="Nh·∫≠p tin nh·∫Øn c·ªßa b·∫°n (t√πy ch·ªçn)"
                  rows={4}
                />
              </div>
              
              <div className={styles.formActions}>
                <button 
                  type="button" 
                  className={styles.cancelBtn}
                  onClick={() => setShowContactForm(false)}
                >
                  H·ªßy
                </button>
                <button type="submit" className={styles.submitBtn}>
                  G·ª≠i th√¥ng tin
                </button>
              </div>
            </form>
          </div>
        </div>
      )}

      {/* Footer Section */}
      <div className={styles.footerSection}>
        <div className={styles.footerContent}>
          <div className={styles.footerInfo}>
            <h3>üåü KaKa M·ªπ Ph·∫©m</h3>
            <p>Chuy√™n cung c·∫•p m·ªπ ph·∫©m ch·∫•t l∆∞·ª£ng cao, uy t√≠n h√†ng ƒë·∫ßu Vi·ªát Nam</p>
          </div>
          
          <div className={styles.footerContact}>
            <h4>Li√™n h·ªá t·ªïng ƒë√†i</h4>
            <p>üìû Hotline: 1900-234-567</p>
            <p>üìß Email: info@kakacosmetica.com</p>
            <p>üåê Website: www.kakacosmetica.com</p>
          </div>
          
          <div className={styles.footerSocial}>
            <h4>Theo d√µi ch√∫ng t√¥i</h4>
            <div className={styles.socialLinks}>
              <a href="https://facebook.com/kakacosmetica" target="_blank" rel="noopener noreferrer">
                üìò Facebook
              </a>
              <a href="https://instagram.com/kakacosmetica" target="_blank" rel="noopener noreferrer">
                üì∑ Instagram
              </a>
              <a href="https://zalo.me/kakacosmetica" target="_blank" rel="noopener noreferrer">
                üí¨ Zalo
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default CuaHang;